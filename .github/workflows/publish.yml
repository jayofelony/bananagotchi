name: Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from file
        id: get_version
        run: |
          VERSION=$(cut -d "'" -f2 < pwnagotchi/_version.py)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Set LAST_VERSION as an environment variable
        run: echo "LAST_VERSION=${{ steps.get-latest-tag.outputs.tag }}" >> $GITHUB_ENV

      - name: Generate release notes
        id: generate_release_notes
        run: |
          COMMITS=$(git log --merges --pretty=format:"* %s" $LAST_VERSION--$VERSION | sed 's/$/\\n/g')
          CONTRIBUTORS=$(git shortlog -sn $LAST_VERSION--$VERSION | awk '{print "* @" $2}' | sed 's/$/\\n/g')
          RELEASE_BODY="**Full Changelog**: https://github.com/jayofelony/pwnagotchi/compare/$LAST_VERSION...$VERSION"
          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV

      - name: Install qemu dependencies
        run: sudo apt update && sudo apt install qemu-user-static qemu-utils xz-utils -y

      - name: Build img file
        run: ls -la .; pwd; make all

      - name: Transfer 64bit.img to docker and give permissions
        run: sudo chown runner:docker "bananagotchi-64bit.img"

      - name: download pishrink
        run: wget https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh

      - name: Compress 64bit.img file using pishrink
        run: sudo chmod +x "pishrink.sh"; sudo "pishrink.sh" -aZ "bananagotchi-64bit.img"

      - name: Change name of 64.img.xz to add version
        run: mv "bananagotchi-64bit.img.xz" "bananagotchi-$VERSION-64bit.img.xz"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Pwnagotchi v${{ env.VERSION }}
          files: |
              bananagotchi-${{ env.VERSION }}-64bit.img.xz
          body: ${{ env.RELEASE_BODY }}
          prerelease: true